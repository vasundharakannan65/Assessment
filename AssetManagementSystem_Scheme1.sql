USE [AssetManagementSystem]
GO
/****** Object:  StoredProcedure [dbo].[USP_ADDASSET]    Script Date: 27-10-2021 10:21:08 ******/
DROP PROCEDURE [dbo].[USP_ADDASSET]
GO
/****** Object:  StoredProcedure [dbo].[SP_GETAssetbyassetname]    Script Date: 27-10-2021 10:21:08 ******/
DROP PROCEDURE [dbo].[SP_GETAssetbyassetname]
GO
/****** Object:  StoredProcedure [dbo].[SP_GETALLASSET]    Script Date: 27-10-2021 10:21:08 ******/
DROP PROCEDURE [dbo].[SP_GETALLASSET]
GO
/****** Object:  StoredProcedure [dbo].[SP_ASSIGNASSET]    Script Date: 27-10-2021 10:21:08 ******/
DROP PROCEDURE [dbo].[SP_ASSIGNASSET]
GO
/****** Object:  StoredProcedure [dbo].[SP_ASSIGNASSET]    Script Date: 27-10-2021 10:21:08 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_ASSIGNASSET] (@ASSETID INT,
@USERNAME VARCHAR(50),
@COMPANYNAME VARCHAR(100),
@ADDRESS VARCHAR(200),
@MOBILENUMBER VARCHAR(10),
@DATEIN DATETIME,
@DATEOUT DATETIME,
@SIGNATURE BIT)
AS
BEGIN
-- SET NOCOUNT ON added to prevent extra result sets from
-- interfering with SELECT statements.
SET NOCOUNT ON;

    BEGIN TRY
IF(@USERNAME IS NOT NULL AND @COMPANYNAME IS NOT NULL AND @ADDRESS IS NOT NULL
AND @MOBILENUMBER IS NOT NULL)
BEGIN
INSERT INTO USERINFO(USERNAME,COMPANYNAME,ADDRESS,MOBILENUMBER)
VALUES(@USERNAME,@COMPANYNAME,@ADDRESS,@MOBILENUMBER)  

DECLARE @USERID INT = @@IDENTITY

IF(@DATEIN IS NOT NULL AND @DATEOUT IS NOT NULL AND @SIGNATURE IS NOT NULL)
BEGIN
INSERT INTO AssetHolder(AssetId,UserId,DATEIN,DATEOUT,SIGNATURE)
VALUES(@ASSETID,@USERID,@DATEIN,@DATEOUT,@SIGNATURE)
END
ELSE
BEGIN
RAISERROR('All values are mandatory',16,6);
END
END
ELSE
BEGIN
RAISERROR('All values are mandatory',16,6);
END
END TRY
BEGIN CATCH
DECLARE @ErrorMessage NVARCHAR(4000);  
DECLARE @ErrorSeverity INT;  
DECLARE @ErrorState INT;  
 
SELECT  
@ErrorMessage = ERROR_MESSAGE(),  
@ErrorSeverity = ERROR_SEVERITY(),  
@ErrorState = ERROR_STATE();  
 
-- Use RAISERROR inside the CATCH block to return error  
-- information about the original error that caused  
-- execution to jump to the CATCH block.  
RAISERROR (@ErrorMessage, -- Message text.  
  @ErrorSeverity, -- Severity.  
  @ErrorState -- State.  
  );  
END CATCH
END
GO
/****** Object:  StoredProcedure [dbo].[SP_GETALLASSET]    Script Date: 27-10-2021 10:21:08 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- AUTHOR:		<VASUNDHARA>
-- CREATE DATE: <26/10/21>
-- DESCRIPTION:	<TO GET ALL ASSET FROM ASSET TABLE>
CREATE PROCEDURE [dbo].[SP_GETALLASSET]
AS
BEGIN

	BEGIN TRY
		--IF NO ASSET EXISTS IN ASSET TBL
		IF((SELECT COUNT(ID) FROM ASSET) IS NULL)
			BEGIN
				RAISERROR('NO ASSET EXITS!',16,6);
			END
		ELSE
			BEGIN	
				SELECT ID,BRANDID,ASSETNAME,MODELNO,SERIALNO,QUANTITY,COLOR,SIZE,TYPE,PRICE,IMAGEPATH
				FROM ASSET
			END
	END TRY 
	BEGIN CATCH 
		DECLARE @ERRORMESSAGE NVARCHAR(4000);  
		DECLARE @ERRORSEVERITY INT;  
		DECLARE @ERRORSTATE INT;  
  
		SELECT   
			@ERRORMESSAGE = ERROR_MESSAGE(),  
			@ERRORSEVERITY = ERROR_SEVERITY(),  
			@ERRORSTATE = ERROR_STATE();  
  
		-- USE RAISERROR INSIDE THE CATCH BLOCK TO RETURN ERROR  
		-- INFORMATION ABOUT THE ORIGINAL ERROR THAT CAUSED  
		-- EXECUTION TO JUMP TO THE CATCH BLOCK.  
		RAISERROR (@ERRORMESSAGE, -- MESSAGE TEXT.  
				   @ERRORSEVERITY, -- SEVERITY.  
				   @ERRORSTATE -- STATE.  
				   );  
	END CATCH
END
GO
/****** Object:  StoredProcedure [dbo].[SP_GETAssetbyassetname]    Script Date: 27-10-2021 10:21:08 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create PROCEDURE [dbo].[SP_GETAssetbyassetname](@AssetName varchar(50))
AS
BEGIN
	DECLARE @assetID INT
	SET @assetID = (SELECT ID FROM [Asset] WHERE AssetName like @AssetName)
	BEGIN TRY
	IF(@assetID IS NULL)
		BEGIN
		RAISERROR('asset %s does not exists!',16,6,@AssetName);
		END
	ELSE
	BEGIN
		SELECT *
		FROM Asset
		WHERE AssetName like @AssetName
	END
	END TRY
	BEGIN CATCH
		DECLARE @ErrorMessage NVARCHAR(4000);  
		DECLARE @ErrorSeverity INT;  
		DECLARE @ErrorState INT;  
 
		SELECT  
		@ErrorMessage = ERROR_MESSAGE(),  
		@ErrorSeverity = ERROR_SEVERITY(),  
		@ErrorState = ERROR_STATE();  
 
		-- Use RAISERROR inside the CATCH block to return error  
		-- information about the original error that caused  
		-- execution to jump to the CATCH block.  
		RAISERROR (@ErrorMessage, -- Message text.  
		  @ErrorSeverity, -- Severity.  
		  @ErrorState -- State.  
		  );  
	END CATCH
END
GO
/****** Object:  StoredProcedure [dbo].[USP_ADDASSET]    Script Date: 27-10-2021 10:21:08 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[USP_ADDASSET](   @BRANDID INT,
									@ASSETNAME VARCHAR(100),
									@MODELNO VARCHAR(26),
									@SERIALNO VARCHAR(26),
									@QUANTITY INT,
									@COLOR VARCHAR(26),
									@SIZE VARCHAR(5),
									@TYPE VARCHAR(80),
									@PRICE DECIMAL,
									@IMAGEPATH VARCHAR(250))
AS
BEGIN TRY 

	--CHECKING WHETHER THE BRAND ID IS FROM BRAND TABLE 
	IF (@BRANDID NOT IN(SELECT ID FROM BRAND)) 
		BEGIN 
			RAISERROR('Brand ID %d does not exists!',16,6,@BRANDID)
		END

	--CHECKING WHETHER THE PROP. OF ASSET IS NOT NULL AND BRAND ID IS FROM BRAND TABLE
	ELSE IF(@ASSETNAME IS NOT NULL AND @MODELNO IS NOT NULL AND @SERIALNO IS NOT NULL AND @QUANTITY IS NOT NULL
	AND @COLOR IS NOT NULL AND @SIZE IS NOT NULL AND @TYPE IS NOT NULL AND @PRICE IS NOT NULL AND @IMAGEPATH IS NOT NULL
	AND (@BRANDID IN (SELECT ID FROM BRAND))) 
		BEGIN		
			INSERT INTO ASSET(BRANDID,ASSETNAME,MODELNO,SERIALNO,QUANTITY,COLOR,SIZE,TYPE,PRICE,IMAGEPATH)
			VALUES(@BRANDID,@ASSETNAME,@MODELNO,@SERIALNO,@QUANTITY,@COLOR,@SIZE,@TYPE,@PRICE,@IMAGEPATH) 
		END
		
	--IF ANY VALUE IS NULL THEN ERROR 
	ELSE 
		BEGIN 
			RAISERROR('All values are mandatory!',16,6); 
		END 
			
END TRY 
BEGIN CATCH 
	DECLARE @ERRORMESSAGE NVARCHAR(4000);  
		DECLARE @ERRORSEVERITY INT;  
		DECLARE @ERRORSTATE INT;  
  
		SELECT   
			@ERRORMESSAGE = ERROR_MESSAGE(),  
			@ERRORSEVERITY = ERROR_SEVERITY(),  
			@ERRORSTATE = ERROR_STATE();  
  
		-- USE RAISERROR INSIDE THE CATCH BLOCK TO RETURN ERROR  
		-- INFORMATION ABOUT THE ORIGINAL ERROR THAT CAUSED  
		-- EXECUTION TO JUMP TO THE CATCH BLOCK.  
		RAISERROR (@ERRORMESSAGE, -- MESSAGE TEXT.  
				   @ERRORSEVERITY, -- SEVERITY.  
				   @ERRORSTATE -- STATE.  
				   );   
END CATCH 
GO
